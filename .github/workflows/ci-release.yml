# .github/workflows/ci-release.yml

name: CI & Release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  release:
    types: [published]

jobs:
  ci:
    name: CI (Lint & Test)
    if: github.event_name != 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

  release:
    name: Release & Publish
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    permissions:
      contents: write

    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update package.json version
        run: |
          npm version ${{ github.event.release.tag_name }} --no-git-tag-version --allow-same-version

      - name: Get previous tag
        id: previoustag
        run: |
          PREVIOUS_TAG="$(git describe --tags --abbrev=0 2>/dev/null)"

          if [ -z "$PREVIOUS_TAG" ]; then
            echo "tag=" >> $GITHUB_OUTPUT
          else
            echo "tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT
          fi

          last_tag=$(git describe --tags --abbrev=0 2>/dev/null)

      - name: Generate release notes content
        id: changelog_content
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          fromTag: ${{ steps.previoustag.outputs.tag }}
          toTag: ${{ github.event.release.tag_name }}
          configuration: "changelog-content-only-configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md and set release body
        id: update_changelog
        run: |
          CHANGELOG_HEADER="## v${{ github.event.release.tag_name }} - $(date +'%d/%m/%Y')"
          echo -e "${CHANGELOG_HEADER}\n" > new_entry.tmp
          echo "${{ steps.changelog_content.outputs.changelog }}" >> new_entry.tmp

          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat new_entry.tmp >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          tail -n +2 CHANGELOG.md 2>/dev/null > old_body.tmp
          {
            echo "# Changelog";
            echo "";
            cat new_entry.tmp;
            echo "";
            cat old_body.tmp;
          } > CHANGELOG.md

          rm new_entry.tmp old_body.tmp

      - name: Commit release files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(release): bump version to v${{ github.event.release.tag_name }} and update CHANGELOG"
          file_pattern: "package.json package-lock.json CHANGELOG.md"
          branch: main

      - name: Update GitHub Release with changelog
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          body: ${{ steps.update_changelog.outputs.body }}
          tag: ${{ github.event.release.tag_name }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        run: npm publish --access public
